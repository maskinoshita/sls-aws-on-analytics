service: sls-aws-on-analytics

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
  # stage: dev
  region: ap-northeast-1

package:
  patterns:
    - '!nested-stacks/**'
    - '!data/**'

custom:
  UNIQ_PREFIX: mk
  DATA_BUCKET: ${self:custom.UNIQ_PREFIX}-20220819-analytics-workshop-bucket
  STREAM_NAME: analytics-workshop-stream
  s3Sync:
    - bucketName: ${self:custom.DATA_BUCKET}
      localDir: data/bucket
      deleteRemoved: false
  nested-stacks:
    location: nested-stacks
    stacks:
      - id: kinesisdatagenerator
        template: kinesis-data-generator.json
        enabled: true
        timeout: 60
        parameters:
          Username: admin
          Password: 8P5J25Zk


# functions:
#   hello:
#     handler: handler.hello

# you can add CloudFormation resource templates here
resources:
  Resources:
    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.DATA_BUCKET}
    DataStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:custom.STREAM_NAME}
        ShardCount: 2
        StreamModeDetails:
          StreamMode: PROVISIONED
    Firehose:
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamName: delivery-${self:custom.STREAM_NAME}
        DeliveryStreamType: KinesisStreamAsSource
        KinesisStreamSourceConfiguration:
          KinesisStreamARN: !GetAtt DataStream.Arn
          RoleArn: !GetAtt FirehoseAndAnalyticsRole.Arn
        S3DestinationConfiguration:
          BucketArn: !Sub "arn:aws:s3:::${DataBucket}"
          Prefix: 'data/raw/'
          BufferingHints:
            SizeInMBs: 1
            IntervalInSeconds: 60
          RoleArn: !GetAtt FirehoseAndAnalyticsRole.Arn
    FirehoseAndAnalyticsRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AnalyticsWorkshopFirehoseRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service: firehose.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
          - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        Policies:
          - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - s3:AbortMultipartUpload
                    - s3:GetBucketLocation
                    - s3:GetObject
                    - s3:ListBucket
                    - s3:ListBucketMultipartUploads
                    - s3:PutObject
                  Effect: Allow
                  Resource:
                    - !Sub "arn:aws:s3:::${DataBucket}"
                    - !Sub "arn:aws:s3:::${DataBucket}/*"
            PolicyName: firehose-analytics-role
    #2 
    GlueRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AnalyticsWorkshopGlueRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service: glue.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
    GlueDatabase:
      Type: AWS::Glue::Database
      Properties: 
        CatalogId: !Ref AWS::AccountId
        DatabaseInput:
          Name: analyticsworkshopdb
    GlueCrawler: # https://aws.amazon.com/jp/premiumsupport/knowledge-center/glue-crawler-multiple-tables/
      Type: AWS::Glue::Crawler
      Properties:
        Name: AnalyticsworkshopCrawler
        Role: !GetAtt GlueRole.Arn
        DatabaseName: !Ref GlueDatabase
        Targets:
          S3Targets:
            - Path: !Sub "s3://${DataBucket}/data/"
        SchemaChangePolicy:
          UpdateBehavior: UPDATE_IN_DATABASE
          DeleteBehavior: LOG
    AthenaPrimaryWorkGroup:
      Type: AWS::Athena::WorkGroup
      Properties:
        Name: AnalyticsWorkshop
        State: ENABLED
        RecursiveDeleteOption: true
        WorkGroupConfiguration:
          EnforceWorkGroupConfiguration: true
          ResultConfiguration:
            OutputLocation: !Sub "s3://${DataBucket}"

  Outputs:
    KinesisDataGeneratorUrl:
      Description: "KinesisDataGeneratorUrl"
      Value: !GetAtt kinesisdatagenerator.Outputs.KinesisDataGeneratorUrl

plugins:
  - serverless-aws-nested-stacks
  - serverless-s3-sync