service: sls-aws-on-analytics

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
  # stage: dev
  region: ap-northeast-1

iam:
  role:
    statements:
  environment:
      WEBSOCKET_ENDPOINT: !Sub "wss://${WebsocketsApi}.execute-api.${AWS:Region}.amazonaws.com/${sls:stage}"
      CONNECTION_TABLE_NAME: !Ref ConnectionTable
      DATABASE_NAME: !Ref GlueDatabase
      WORKGROUP_NAME: !Ref AthenaPrimaryWorkGroup

package:
  patterns:
    - '!nested-stacks/**'
    - '!data/**'
    - '!images/**'
    - '!static/**'

custom:
  UNIQ_PREFIX: mk
  DATA_BUCKET: ${self:custom.UNIQ_PREFIX}-20220819-analytics-workshop-bucket
  STREAM_NAME: analytics-workshop-stream
  KDA_APP_NAME: kda-stream-app
  CONNECTION_TABLE_NAME: !Ref ConnectionTable
  WEBSITE_BUCKET: ${self:custom.UNIQ_PREFIX}-20220819-analytics-workshop-website
  WEBSITE_ORIGIN: "http://${self:custom.WEBSITE_BUCKET}.s3-website-${aws:region}.amazonaws.com"
  s3Sync:
    - bucketName: ${self:custom.DATA_BUCKET}
      localDir: data/bucket
      deleteRemoved: false
    - bucketName: ${self:custom.WEBSITE_BUCKET}
      localDir: static
      deleteRemoved: false
  nested-stacks:
    location: nested-stacks
    stacks:
      - id: kinesisdatagenerator
        template: kinesis-data-generator.json
        enabled: true
        timeout: 60
        parameters:
          Username: admin
          Password: 8P5J25Zk
      - id: gluesagemaker
        template: glue_sagemaker_notebook.yaml
        enabled: false
        timeout: 1200
        parameters:
          NotebookName: workshop-notebook
          DevEndpointName: workshop-dev-endpoint
          GlueServiceRoleARN: !GetAtt GlueRole.Arn
          NumberOfWorkers: 2

functions:
  handleUpdate:
    handler: handler.handleUpdate
    events:
      - eventBridge: # Batch Update Timing
          enabled: false
          pattern:
            source: aws.glue
            detail-type: Glue Data Catalog Table State Change
            detail:
              databaseName: !Ref GlueDatabase
              tableName: processed-data2

  connect:
    handler: handler.connect
    events:
      - websocket:
          route: $connect
  disconnect:
    handler: handler.disconnect
    events:
      - websocket:
          route: $disconnect

# you can add CloudFormation resource templates here
resources:
  Resources:
    DataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.DATA_BUCKET}
    DataStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:custom.STREAM_NAME}
        ShardCount: 2
        StreamModeDetails:
          StreamMode: PROVISIONED
    Firehose:
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamName: delivery-${self:custom.STREAM_NAME}
        DeliveryStreamType: KinesisStreamAsSource
        KinesisStreamSourceConfiguration:
          KinesisStreamARN: !GetAtt DataStream.Arn
          RoleArn: !GetAtt FirehoseAndAnalyticsRole.Arn
        S3DestinationConfiguration:
          BucketArn: !Sub "arn:aws:s3:::${DataBucket}"
          Prefix: 'data/raw/'
          BufferingHints:
            SizeInMBs: 1
            IntervalInSeconds: 60
          RoleArn: !GetAtt FirehoseAndAnalyticsRole.Arn
    FirehoseAndAnalyticsRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AnalyticsWorkshopFirehoseRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service:
                  - firehose.amazonaws.com
                  - kinesisanalytics.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
          - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        Policies:
          - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - s3:AbortMultipartUpload
                    - s3:GetBucketLocation
                    - s3:GetObject
                    - s3:ListBucket
                    - s3:ListBucketMultipartUploads
                    - s3:PutObject
                  Effect: Allow
                  Resource:
                    - !Sub "arn:aws:s3:::${DataBucket}"
                    - !Sub "arn:aws:s3:::${DataBucket}/*"
            PolicyName: firehose-analytics-role
          - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - lambda:InvokeFunction
                    - lambda:GetFunctionConfiguration
                  Effect: Allow
                  Reousrce:
                    - !GetAtt HandleUpdateLambdaFunction.Arn

    #2 
    GlueRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AnalyticsWorkshopGlueRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action: sts:AssumeRole
              Effect: Allow
              Principal:
                Service: glue.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
    GlueDatabase:
      Type: AWS::Glue::Database
      Properties: 
        CatalogId: !Ref AWS::AccountId
        DatabaseInput:
          Name: analyticsworkshopdb
    GlueCrawler:
      Type: AWS::Glue::Crawler
      Properties:
        Name: AnalyticsworkshopCrawler
        Role: !GetAtt GlueRole.Arn
        DatabaseName: !Ref GlueDatabase
        Targets:
          S3Targets:
            - Path: !Sub "s3://${DataBucket}/data/"
        SchemaChangePolicy:
          UpdateBehavior: UPDATE_IN_DATABASE
          DeleteBehavior: LOG
    AthenaPrimaryWorkGroup:
      Type: AWS::Athena::WorkGroup
      Properties:
        Name: AnalyticsWorkshop
        State: ENABLED
        RecursiveDeleteOption: true
        WorkGroupConfiguration:
          EnforceWorkGroupConfiguration: true
          ResultConfiguration:
            OutputLocation: !Sub "s3://${DataBucket}"
    # 4
    GlueRawStreamTable:
      Type: AWS::Glue::Table
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseName: !Ref GlueDatabase
        TableInput:
          Name: raw_stream
          TableType: EXTERNAL_TABLE
          Parameters:
            classification: json
            kinesisanalytics.proctime: proctime
          StorageDescriptor:
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            Columns:
              - Name: uuid
                Type: string
              - Name: device_ts
                Type: timestamp
              - Name: device_id
                Type: int
              - Name: device_temp
                Type: int
              - Name: track_id
                Type: int
              - Name: activity_type
                Type: string
            Location: !Ref DataStream
            SerdeInfo:
              Parameters:
                paths: "activity_type,device_id,device_temp,device_ts,track_id,uuid"
              SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
            Parameters: 
              # streamARN: !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${DataStream}"
              endpointUrl: !Sub "https://kinesis.${AWS::Region}.amazonaws.com"
              streamName: !Ref DataStream
              typeOfData: kinesis
    KDAZeppelinFlinkNotebook:
      Type: AWS::KinesisAnalyticsV2::Application
      Properties:
        RuntimeEnvironment: ZEPPELIN-FLINK-2_0
        ApplicationName: ${self:custom.KDA_APP_NAME}
        ApplicationMode: INTERACTIVE
        ApplicationConfiguration:
          FlinkApplicationConfiguration:
            ParallelismConfiguration:
              ConfigurationType: CUSTOM
              Parallelism: 4
              ParallelismPerKPU: 1
          ZeppelinApplicationConfiguration:
            CatalogConfiguration:
              GlueDataCatalogConfiguration:
                DatabaseARN: !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueDatabase}"
            # Extra Jar need: Could not find any factory for identifier 'kinesis' that implements 'org.apache.flink.table.factories.DynamicTableFactory' in the classpath.
            # see: https://docs.aws.amazon.com/kinesisanalytics/latest/java/analytics-java-api.pdf
            #   Connectors and dependencies
            CustomArtifactsConfiguration:
              - ArtifactType: DEPENDENCY_JAR
                MavenReference:
                  GroupId: org.apache.flink
                  ArtifactId: flink-sql-connector-kinesis_2.12
                  Version: 1.13.2
          EnvironmentProperties:
            PropertyGroups:
              - PropertyGroupId: env
                PropertyMap:
                  Bucket: !Sub "s3://${DataBucket}"
                  Path: "/data/reference_data/"
        ServiceExecutionRole: !GetAtt FirehoseAndAnalyticsRole.Arn
    # Extra
    ConnectionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: connections
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
    WebSiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.WEBSITE_BUCKET}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref WebSiteBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${WebSiteBucket}/*"

  Outputs:
    KinesisDataGeneratorUrl:
      Description: "KinesisDataGeneratorUrl"
      Value: !GetAtt kinesisdatagenerator.Outputs.KinesisDataGeneratorUrl

plugins:
  - serverless-aws-nested-stacks
  - serverless-s3-sync